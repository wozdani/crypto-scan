proszƒô o dodanie do pliku trend_mode.py obs≈Çugi wyjƒÖtk√≥w (try/except) oraz dedykowanych print√≥w dla b≈Çƒôd√≥w, aby ≈Çatwo by≈Ço debugowaƒá problemy z analizƒÖ trendu i uniknƒÖƒá wysypywania siƒô ca≈Çego skanera.

Obecnie je≈õli jakakolwiek funkcja w trend_mode.py (np. compute_trend_strength, detect_pullback, interpret_market_as_trader) napotka b≈ÇƒÖd (np. ZeroDivisionError, KeyError, NoneType), to skaner przerywa dzia≈Çanie. Chcƒô, aby system:

≈Çapa≈Ç b≈Çƒôdy,

wypisywa≈Ç je jako [TREND ERROR] w logach terminala,

zwraca≈Ç bezpieczne warto≈õci domy≈õlne (0.0, False, "unknown"),

opcjonalnie zapisywa≈Ç b≈ÇƒÖd do pliku trend_error_log.txt.

‚úÖ Wzorzec do wdro≈ºenia (dla ka≈ºdej funkcji):
Przyk≈Çad w compute_trend_strength():
python
Kopiuj
Edytuj
def compute_trend_strength(candles):
    try:
        green_candles = sum(1 for c in candles if c["close"] > c["open"])
        green_ratio = green_candles / len(candles)
        slope = compute_slope(candles)
        score = 0.5 * green_ratio + 0.5 * slope
        print(f"[TREND DEBUG] Trend strength: {score:.2f} (green={green_ratio:.2f}, slope={slope:.2f})")
        return score
    except Exception as e:
        print(f"[TREND ERROR] compute_trend_strength: {e}")
        return 0.0
Przyk≈Çad w interpret_market_as_trader():
python
Kopiuj
Edytuj
def interpret_market_as_trader(symbol, candles, utc_hour):
    try:
        # pe≈Çna analiza
        return {
            "decision": decision,
            "confidence": confidence,
            "final_score": final_score,
            "reasons": reasons
        }
    except Exception as e:
        print(f"[TREND ERROR] {symbol} - interpret_market_as_trader: {e}")
        with open("crypto-scan/trend_error_log.txt", "a") as f:
            f.write(json.dumps({
                "symbol": symbol,
                "error": str(e)
            }) + "\n")
        return {
            "decision": "error",
            "confidence": 0.0,
            "final_score": 0.0,
            "reasons": [f"ERROR: {str(e)}"]
        }
üõ†Ô∏è Gdzie zastosowaƒá:
compute_trend_strength()

detect_pullback()

detect_support_reaction()

detect_bounce_confirmation()

market_time_score()

compute_trend_score()

interpret_market_as_trader()

Po wdro≈ºeniu, ka≈ºda awaria w analizie trendu zostanie z≈Çapana i opisana w [TREND ERROR], bez przerwania dzia≈Çania skanera. Proszƒô te≈º o zapis do trend_error_log.txt (append mode) w katalogu crypto-scan/, tak jak wcze≈õniej debugi.

Dziƒôki! üöÄ

