1. Globalna zmienna do śledzenia trailing score
Dodaj na początku pliku:

python
Kopiuj
Edytuj
trailing_scores = {}  # symbol → poprzedni PPWCS score
last_alert_time = {}  # symbol → timestamp ostatniego alertu
📩 2. Funkcja send_alert(symbol, ppwcs_score, trigger, tp_forecast)
python
Kopiuj
Edytuj
import time
from utils.telegram import send_telegram_message  # lub twoja wersja

def get_alert_level(ppwcs):
    if ppwcs >= 80:
        return "strong"
    elif ppwcs >= 70:
        return "active"
    elif ppwcs >= 60:
        return "watchlist"
    else:
        return "none"

def send_alert(symbol, ppwcs_score, trigger, tp_forecast):
    global trailing_scores, last_alert_time

    level = get_alert_level(ppwcs_score)
    now = time.time()

    # Cooldown 60 min
    if symbol in last_alert_time and now - last_alert_time[symbol] < 3600:
        return

    # Trailing scoring
    previous_score = trailing_scores.get(symbol, 0)
    score_increase = ppwcs_score - previous_score
    trailing_scores[symbol] = ppwcs_score

    if level == "none":
        return
    if level != "strong" and score_increase < 5:
        return

    last_alert_time[symbol] = now

    # Format wiadomości
    emoji = {
        "strong": "🚀",
        "active": "⚠️",
        "watchlist": "👀"
    }.get(level, "")

    message = (
        f"{emoji} [{level.upper()} ALERT] Sygnał dla {symbol}!\n"
        f"PPWCS: {ppwcs_score}\n"
        f"Trigger: {trigger}\n"
        f"TP1: {tp_forecast.get('TP1')} | TP2: {tp_forecast.get('TP2')} | TP3: {tp_forecast.get('TP3')}\n"
        f"Trailing TP: {'aktywny' if tp_forecast.get('trailing') else 'nieaktywny'}"
    )

    # Telegram + logowanie
    if level in ["active", "strong"]:
        send_telegram_message(message)

    # GPT feedback tylko dla strong
    if level == "strong":
        from utils.gpt_feedback import send_report_to_chatgpt
        send_report_to_chatgpt(symbol, ppwcs_score, trigger, tp_forecast)
🔁 3. Zmiany w scan_cycle() (fragment)
Upewnij się, że po obliczeniu ppwcs_score, trigger i tp_forecast masz:

python
Kopiuj
Edytuj
send_alert(symbol, ppwcs_score, trigger, tp_forecast)
To musi być wewnątrz pętli symboli.

