ProszÄ™ o dodanie nowej funkcji compute_checklist_score(signals: dict) do projektu. Funkcja ta:

âœ… Oblicza strukturÄ™ pre-pump na podstawie checklisty (maksymalnie 100 pkt)
âœ… KaÅ¼dy warunek = +5 punktÃ³w
âœ… Zwraca tuple: (checklist_score, checklist_summary)

checklist_score ma byÄ‡ dodany do raportu JSON obok PPWCS.
checklist_summary to lista aktywnych warunkÃ³w, np.:

json
Kopiuj
Edytuj
"checklist_score": 60,
"checklist_summary": ["compressed", "volume_spike", "vwap_pinning", "stealth_inflow", "rsi_flatline", "whale_activity"]
ðŸ“¦ TreÅ›Ä‡ funkcji do dodania:
python
Kopiuj
Edytuj
def compute_checklist_score(signals: dict):
    score = 0
    summary = []

    # I. STRUKTURA TECHNICZNA
    if signals.get(\"rsi_flatline\"):
        score += 5
        summary.append(\"rsi_flatline\")

    if signals.get(\"volume_spike\"):
        score += 5
        summary.append(\"volume_spike\")

    if signals.get(\"fake_reject\"):
        score += 5
        summary.append(\"fake_reject\")

    if signals.get(\"compressed\"):
        score += 5
        summary.append(\"compressed\")

    # II. ZACHOWANIE SMART MONEY
    if signals.get(\"whale_activity\"):
        score += 5
        summary.append(\"whale_activity\")

    if signals.get(\"dex_inflow\"):
        score += 5
        summary.append(\"dex_inflow\")

    if signals.get(\"stealth_inflow\"):
        score += 5
        summary.append(\"stealth_inflow\")

    if signals.get(\"spoofing\") or signals.get(\"heatmap_exhaustion\"):
        score += 5
        summary.append(\"spoofing_or_exhaustion\")

    # III. KONTEKST MIKROSTRUKTURALNY
    if signals.get(\"vwap_pinning\"):
        score += 5
        summary.append(\"vwap_pinning\")

    if signals.get(\"fractal_echo_squeeze\"):
        score += 5
        summary.append(\"fractal_echo_squeeze\")

    if signals.get(\"time_clustering\"):
        score += 5
        summary.append(\"time_clustering\")

    if signals.get(\"event_tag\") in [\"listing\", \"presale\", \"airdrop\", \"partnership\"]:
        score += 5
        summary.append(\"positive_event_tag\")

    # IV. FILTRY ANTY-FAKE
    if signals.get(\"pure_accumulation\"):
        score += 5
        summary.append(\"pure_accumulation\")

    if signals.get(\"rsi\") and signals[\"rsi\"] < 65:
        score += 5
        summary.append(\"rsi_below_65\")

    if signals.get(\"risk_tag\") not in [\"exploit\", \"unlock\", \"rug\", \"delisting\"]:
        score += 5
        summary.append(\"no_risk_tags\")

    return score, summary
Po dodaniu tej funkcji proszÄ™ o wpiÄ™cie jej do raportowania kaÅ¼dego tokena w skanowaniu â€“ obok PPWCS.
JeÅ›li potrzeba, mogÄ™ podaÄ‡ dokÅ‚adny sposÃ³b integracji w scan_cycle().